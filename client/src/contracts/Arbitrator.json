{
  "contractName": "Arbitrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealPossible",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputes",
      "outputs": [
        {
          "internalType": "contract IArbitrable",
          "name": "arbitrated",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "choices",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        },
        {
          "internalType": "enum IArbitrator.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_choices",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "internalType": "enum IArbitrator.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "appealPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"contract IArbitrable\",\"name\":\"arbitrated\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"choices\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealCost(uint256,bytes)\":{\"details\":\"Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"_0\":\"Amount to be paid.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"end\":\"The end of the period.\",\"start\":\"The start of the period.\"}},\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"_0\":\"Amount to be paid.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Arbitrator.sol\":\"Arbitrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Arbitrator.sol\":{\"keccak256\":\"0x113fa7f3392775ced6a6ea4884e429e6c5b7b1efe617f4be7f927dd5519a99fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c4b844e07dfb92f0f966f13a58e92b8876080b70311bde9699b0b8486eba9a\",\"dweb:/ipfs/QmTawAbUPePRYihvUigZKH6EqyUzPjn8EvX28DKNLDaYw8\"]},\"project:/contracts/IArbitrable.sol\":{\"keccak256\":\"0xbb56afa60f4106c18eeedf8486040890345e4963f79f556b1046af414989dc9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae57e4e66390e8b3297869f9e9c171bef6574c037d0337771ca14bc859f9e5d2\",\"dweb:/ipfs/QmTE2FvJB3zeGBk8y94gsYYGZX5P8zfHtnKmhzp1217dte\"]},\"project:/contracts/IArbitrator.sol\":{\"keccak256\":\"0xc23074d93a170ceda388e930958bfba087da5f2868f85c9d208a9d42a4550e3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b79681f5acfde83c5961cbf6a597acea219f52e3facff6311ff8cce97055f647\",\"dweb:/ipfs/QmTkcVf1g9qJdQiPU29VSvQYnq2EktCvrPhYx8cyRCMe9e\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610195578063afe15cfb146101c0578063c13517e1146101fe578063f23f16e61461022e578063f7434ea91461026b57610091565b806310f169e8146100965780631c3db16d146100d3578063311a6c561461011057806349912f8814610139578063564a565d14610155575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906109ea565b6102a8565b6040516100ca9190610ba8565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f591906109ea565b61030a565b6040516101079190610c23565b60405180910390f35b34801561011c57600080fd5b5061013760048036038101906101329190610a67565b61035f565b005b610153600480360381019061014e9190610a13565b610606565b005b34801561016157600080fd5b5061017c600480360381019061017791906109ea565b610656565b60405161018c9493929190610b63565b60405180910390f35b3480156101a157600080fd5b506101aa6106c3565b6040516101b79190610b48565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e291906109ea565b6106e7565b6040516101f5929190610c3e565b60405180910390f35b61021860048036038101906102139190610a13565b6106f6565b6040516102259190610c23565b60405180910390f35b34801561023a57600080fd5b5061025560048036038101906102509190610a13565b6108f0565b6040516102629190610c23565b60405180910390f35b34801561027757600080fd5b50610292600480360381019061028d91906109a9565b61091b565b60405161029f9190610c23565b60405180910390f35b6000600182815481106102e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020160030160009054906101000a900460ff169050919050565b600060018281548110610346577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600201549050919050565b60006001838154811061039b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201905080600101548211156103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610c03565b60405180910390fd5b6000600281111561042c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160009054906101000a900460ff166002811115610476577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90610bc3565b60405180910390fd5b81816002018190555060028160030160006101000a81548160ff0219169083600281111561050d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503373ffffffffffffffffffffffffffffffffffffffff166108fc6105446040518060200160405280600081525061091b565b9081150290604051600060405180830381858888f1935050505015801561056f573d6000803e3d6000fd5b508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663311a6c5684846040518363ffffffff1660e01b81526004016105cf929190610c3e565b600060405180830381600087803b1580156105e957600080fd5b505af11580156105fd573d6000803e3d6000fd5b50505050505050565b61061082826108f0565b341015610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064990610be3565b60405180910390fd5b5050565b6001818154811061066657600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008091509150915091565b60006107018261091b565b341015610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90610be3565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020016101a48152602001600060028111156107b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600281111561088c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050600180805490506108a49190610cce565b90503373ffffffffffffffffffffffffffffffffffffffff16817f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99560405160405180910390a392915050565b60007f0400000000000000000000000000000000000000000000000000000000000000905092915050565b600066038d7ea4c680009050919050565b600061093f61093a84610c8c565b610c67565b90508281526020810184848401111561095757600080fd5b610962848285610d87565b509392505050565b600082601f83011261097b57600080fd5b813561098b84826020860161092c565b91505092915050565b6000813590506109a381610f40565b92915050565b6000602082840312156109bb57600080fd5b600082013567ffffffffffffffff8111156109d557600080fd5b6109e18482850161096a565b91505092915050565b6000602082840312156109fc57600080fd5b6000610a0a84828501610994565b91505092915050565b60008060408385031215610a2657600080fd5b6000610a3485828601610994565b925050602083013567ffffffffffffffff811115610a5157600080fd5b610a5d8582860161096a565b9150509250929050565b60008060408385031215610a7a57600080fd5b6000610a8885828601610994565b9250506020610a9985828601610994565b9150509250929050565b610aac81610d02565b82525050565b610abb81610d51565b82525050565b610aca81610d75565b82525050565b6000610add602483610cbd565b9150610ae882610e65565b604082019050919050565b6000610b00602a83610cbd565b9150610b0b82610eb4565b604082019050919050565b6000610b23601583610cbd565b9150610b2e82610f03565b602082019050919050565b610b4281610d47565b82525050565b6000602082019050610b5d6000830184610aa3565b92915050565b6000608082019050610b786000830187610ab2565b610b856020830186610b39565b610b926040830185610b39565b610b9f6060830184610ac1565b95945050505050565b6000602082019050610bbd6000830184610ac1565b92915050565b60006020820190508181036000830152610bdc81610ad0565b9050919050565b60006020820190508181036000830152610bfc81610af3565b9050919050565b60006020820190508181036000830152610c1c81610b16565b9050919050565b6000602082019050610c386000830184610b39565b92915050565b6000604082019050610c536000830185610b39565b610c606020830184610b39565b9392505050565b6000610c71610c82565b9050610c7d8282610d96565b919050565b6000604051905090565b600067ffffffffffffffff821115610ca757610ca6610e25565b5b610cb082610e54565b9050602081019050919050565b600082825260208201905092915050565b6000610cd982610d47565b9150610ce483610d47565b925082821015610cf757610cf6610dc7565b5b828203905092915050565b6000610d0d82610d27565b9050919050565b6000819050610d2282610f2c565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d5c82610d63565b9050919050565b6000610d6e82610d27565b9050919050565b6000610d8082610d14565b9050919050565b82818337600083830152505050565b610d9f82610e54565b810181811067ffffffffffffffff82111715610dbe57610dbd610e25565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f44697370757465206973206e6f74206177616974696e6720617262697472617460008201527f696f6e2e00000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460008201527f696f6e20636f7374732e00000000000000000000000000000000000000000000602082015250565b7f52756c696e67206f7574206f6620626f756e6473210000000000000000000000600082015250565b60038110610f3d57610f3c610df6565b5b50565b610f4981610d47565b8114610f5457600080fd5b5056fea264697066735822122084a57257ec4ae7ad4b2e070dde1ec594983276099a0b8c318d78b4491bb5d18c64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10870:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "90:260:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "100:74:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:40:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:48:6"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "109:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "109:65:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "100:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "190:5:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "197:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "183:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "183:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "183:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "213:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "228:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "224:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:16:6"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "217:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "278:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "290:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "280:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "280:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "280:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "259:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "264:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "255:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "255:16:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "273:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "252:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:25:6"
                  },
                  "nodeType": "YulIf",
                  "src": "249:2:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "327:3:6"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "332:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "337:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "303:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "303:41:6"
                }
              ]
            },
            "name": "abi_decode_available_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "63:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "68:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "76:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "84:5:6",
                "type": ""
              }
            ],
            "src": "7:343:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "430:210:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "479:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "488:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "491:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "481:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "481:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "481:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "458:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "466:4:6",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:17:6"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "473:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "440:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "504:34:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "531:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "518:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "518:20:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "508:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "547:87:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "607:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "615:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "603:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:17:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "622:6:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "630:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "556:46:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "547:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "408:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "416:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "424:5:6",
                "type": ""
              }
            ],
            "src": "369:271:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "698:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "708:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "730:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "717:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "708:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "773:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "746:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "746:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "676:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "684:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "692:5:6",
                "type": ""
              }
            ],
            "src": "646:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "866:298:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "912:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "921:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "924:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "914:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "914:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "914:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "887:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "896:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "883:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "883:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "908:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "879:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "876:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "938:219:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "953:45:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "984:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "995:1:6",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "980:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "980:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "967:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "967:31:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "957:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1045:16:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1054:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1057:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1047:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1047:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1047:12:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1017:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1025:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1014:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1014:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1011:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1075:72:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1119:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1115:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1115:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1139:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1085:29:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:62:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1075:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:6",
                "type": ""
              }
            ],
            "src": "791:373:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1236:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1282:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1291:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1294:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1284:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1284:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1284:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1257:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1266:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1253:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1253:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1278:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1249:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1246:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1308:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1323:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1337:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1327:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1352:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1387:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1398:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1383:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1383:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1407:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1362:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1362:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1352:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1206:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1217:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1229:6:6",
                "type": ""
              }
            ],
            "src": "1170:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1530:426:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1576:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1585:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1588:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1578:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1578:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1578:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1551:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1560:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1547:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1547:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1572:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1543:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1543:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1540:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1602:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1617:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1631:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1621:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1646:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1681:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1692:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1677:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1677:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1701:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1656:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1656:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1646:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1729:220:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1744:46:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1775:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1786:2:6",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1771:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1771:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1758:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:32:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1748:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1837:16:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1846:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1849:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1839:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1839:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1839:12:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1809:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1817:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1806:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1806:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1803:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1867:72:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1911:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1922:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1907:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1907:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1931:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1877:29:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:62:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1867:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1492:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1503:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1515:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1523:6:6",
                "type": ""
              }
            ],
            "src": "1438:518:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2045:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2091:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2100:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2103:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2093:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2093:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2093:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2066:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2075:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2062:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2062:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2087:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2058:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2055:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2117:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2132:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2146:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2136:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2161:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2196:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2207:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2192:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2192:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2216:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2171:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2171:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2161:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2244:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2259:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2273:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2263:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2289:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2324:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2335:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2320:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2320:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2344:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2299:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2299:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2289:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2007:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2018:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2030:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2038:6:6",
                "type": ""
              }
            ],
            "src": "1962:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2440:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2457:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2480:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2462:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2462:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2450:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2450:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2450:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2428:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2435:3:6",
                "type": ""
              }
            ],
            "src": "2375:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2583:85:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2600:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2655:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IArbitrable_$730_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2605:49:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2605:56:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2593:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:69:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2593:69:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IArbitrable_$730_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2571:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2578:3:6",
                "type": ""
              }
            ],
            "src": "2499:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2754:81:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2771:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2822:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_DisputeStatus_$738_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2776:45:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:52:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2764:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2764:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2764:65:6"
                }
              ]
            },
            "name": "abi_encode_t_enum$_DisputeStatus_$738_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2742:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2749:3:6",
                "type": ""
              }
            ],
            "src": "2674:161:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2987:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2997:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3063:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3068:2:6",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3004:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3004:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2997:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3169:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82",
                      "nodeType": "YulIdentifier",
                      "src": "3080:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3080:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3080:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3182:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3193:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3198:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3189:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3189:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3182:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2975:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2983:3:6",
                "type": ""
              }
            ],
            "src": "2841:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3359:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3369:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3435:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3440:2:6",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3376:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3376:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3369:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3541:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                      "nodeType": "YulIdentifier",
                      "src": "3452:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3452:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3452:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3554:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3565:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3570:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3561:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3561:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3554:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3347:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3355:3:6",
                "type": ""
              }
            ],
            "src": "3213:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3731:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3741:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3807:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3812:2:6",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3748:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3748:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3741:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3913:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76",
                      "nodeType": "YulIdentifier",
                      "src": "3824:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3824:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3824:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3926:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3937:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3942:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3933:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3933:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3926:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3719:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3727:3:6",
                "type": ""
              }
            ],
            "src": "3585:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4022:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4039:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4062:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4044:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4044:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4032:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4032:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4032:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4010:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4017:3:6",
                "type": ""
              }
            ],
            "src": "3957:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4179:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4189:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4201:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4212:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4197:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4197:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4189:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4269:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4282:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4293:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4278:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4278:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4225:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4225:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4151:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4163:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4174:4:6",
                "type": ""
              }
            ],
            "src": "4081:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4525:405:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4535:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4547:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4558:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4543:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4535:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4635:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4648:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4659:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4644:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4644:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IArbitrable_$730_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4572:62:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4572:90:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4572:90:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4716:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4729:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4740:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4725:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4725:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4672:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4672:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4672:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4798:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4811:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4822:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4807:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4754:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4754:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4754:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4895:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4908:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4919:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4904:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4904:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_DisputeStatus_$738_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4836:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:87:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4836:87:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IArbitrable_$730_t_uint256_t_uint256_t_enum$_DisputeStatus_$738__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4473:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4485:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4493:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4501:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4509:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4520:4:6",
                "type": ""
              }
            ],
            "src": "4309:621:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5049:139:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5059:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5071:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5082:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5067:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5067:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5059:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5154:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5167:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5178:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5163:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5163:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_DisputeStatus_$738_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5095:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5095:86:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5095:86:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_DisputeStatus_$738__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5021:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5033:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5044:4:6",
                "type": ""
              }
            ],
            "src": "4936:252:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5365:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5375:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5387:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5398:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5383:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5383:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5375:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5422:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5433:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5418:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5418:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5441:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5447:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5437:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5437:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5411:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5411:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5411:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5467:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5601:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5475:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5475:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5467:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5345:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5360:4:6",
                "type": ""
              }
            ],
            "src": "5194:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5790:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5800:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5812:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5823:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5808:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5808:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5800:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5847:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5858:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5843:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5843:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5866:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5872:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5862:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5862:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5836:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5836:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5836:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5892:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6026:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5900:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5900:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5892:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5770:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5785:4:6",
                "type": ""
              }
            ],
            "src": "5619:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6215:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6225:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6237:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6248:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6233:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6233:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6225:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6272:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6283:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6268:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6268:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6291:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6297:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6287:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6287:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6261:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6261:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6261:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6317:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6451:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6325:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6325:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6317:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6195:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6210:4:6",
                "type": ""
              }
            ],
            "src": "6044:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6567:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6577:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6589:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6600:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6585:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6577:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6657:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6670:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6681:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6666:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6666:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6613:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6613:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6613:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6539:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6551:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6562:4:6",
                "type": ""
              }
            ],
            "src": "6469:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6823:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6833:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6845:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6856:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6841:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6841:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6833:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6913:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6926:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6937:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6922:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6922:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6869:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6869:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6869:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6994:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7007:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7018:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7003:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7003:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6950:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6950:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6950:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6787:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6799:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6807:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6818:4:6",
                "type": ""
              }
            ],
            "src": "6697:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7076:88:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7086:30:6",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "7096:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7096:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7086:6:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7145:6:6"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7153:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "7125:19:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7125:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7125:33:6"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7060:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7069:6:6",
                "type": ""
              }
            ],
            "src": "7035:129:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7210:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7220:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7236:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7230:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7230:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7220:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7203:6:6",
                "type": ""
              }
            ],
            "src": "7170:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7317:241:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7422:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7424:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7424:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7424:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7394:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7402:18:6",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7391:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7391:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7388:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7454:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7484:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "7462:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7454:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7528:23:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7540:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7546:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7536:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:15:6"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7528:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7301:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7312:4:6",
                "type": ""
              }
            ],
            "src": "7251:307:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7660:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7677:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7682:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7670:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7670:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7670:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7698:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7717:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7722:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7713:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7713:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7698:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7632:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7637:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7648:11:6",
                "type": ""
              }
            ],
            "src": "7564:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7784:146:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7794:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7817:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7799:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7799:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7794:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7828:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7851:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7833:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7833:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7828:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7875:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7877:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7877:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7877:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7869:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7872:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7866:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7866:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7863:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7907:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7919:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7922:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7915:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7915:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7907:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7770:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7773:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7779:4:6",
                "type": ""
              }
            ],
            "src": "7739:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7981:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7991:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8020:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8002:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8002:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7991:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7963:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7973:7:6",
                "type": ""
              }
            ],
            "src": "7936:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8100:83:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8110:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8121:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8110:7:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8171:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_DisputeStatus_$738",
                      "nodeType": "YulIdentifier",
                      "src": "8127:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8127:50:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8127:50:6"
                }
              ]
            },
            "name": "cleanup_t_enum$_DisputeStatus_$738",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8082:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8092:7:6",
                "type": ""
              }
            ],
            "src": "8038:145:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8234:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8244:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8259:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8266:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8255:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8255:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8244:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8216:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8226:7:6",
                "type": ""
              }
            ],
            "src": "8189:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8366:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8376:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8387:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8376:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8348:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8358:7:6",
                "type": ""
              }
            ],
            "src": "8321:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8483:85:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8493:69:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8556:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IArbitrable_$730_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8506:49:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8506:56:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8493:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IArbitrable_$730_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8463:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8473:9:6",
                "type": ""
              }
            ],
            "src": "8404:164:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8653:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8663:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8694:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8676:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8676:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8663:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IArbitrable_$730_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8633:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8643:9:6",
                "type": ""
              }
            ],
            "src": "8574:132:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8787:70:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8797:54:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8845:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_DisputeStatus_$738",
                      "nodeType": "YulIdentifier",
                      "src": "8810:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8810:41:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8797:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_DisputeStatus_$738_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8767:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8777:9:6",
                "type": ""
              }
            ],
            "src": "8712:145:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8914:103:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "8937:3:6"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8942:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8947:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "8924:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8924:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "8995:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9000:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8991:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8991:16:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9009:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8984:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8984:27:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8984:27:6"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8896:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8901:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8906:6:6",
                "type": ""
              }
            ],
            "src": "8863:154:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9066:238:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9076:58:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "9098:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "9128:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "9106:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9106:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9094:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9094:40:6"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "9080:10:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9245:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9247:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9247:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9247:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "9188:10:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9200:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9185:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9185:34:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "9224:10:6"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9236:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9221:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9221:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9182:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9182:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9179:2:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9283:2:6",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "9287:10:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9276:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9276:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9276:22:6"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9052:6:6",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "9060:4:6",
                "type": ""
              }
            ],
            "src": "9023:281:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9338:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9355:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9358:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9348:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9348:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9452:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9455:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9445:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9445:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9445:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9476:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9479:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9469:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9469:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9469:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9310:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9524:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9541:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9544:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9534:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9534:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9638:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9641:4:6",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9631:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9631:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9631:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9662:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9665:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9655:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9655:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9655:15:6"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "9496:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9710:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9727:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9730:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9720:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9720:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9720:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9824:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9827:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9817:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9817:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9817:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9848:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9851:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9841:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9841:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9841:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "9682:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9916:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9926:38:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9944:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9951:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9940:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9940:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9960:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9956:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9956:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9936:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9936:28:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "9926:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9899:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "9909:6:6",
                "type": ""
              }
            ],
            "src": "9868:102:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10082:117:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10104:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10112:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10100:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10100:14:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10116:34:6",
                        "type": "",
                        "value": "Dispute is not awaiting arbitrat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10093:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10093:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10093:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10172:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10180:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10168:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10168:15:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10185:6:6",
                        "type": "",
                        "value": "ion."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10161:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10161:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10161:31:6"
                }
              ]
            },
            "name": "store_literal_in_memory_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10074:6:6",
                "type": ""
              }
            ],
            "src": "9976:223:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10311:123:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10333:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10341:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10329:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10329:14:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10345:34:6",
                        "type": "",
                        "value": "Not enough ETH to cover arbitrat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10322:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10322:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10322:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10401:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10409:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10397:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10397:15:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10414:12:6",
                        "type": "",
                        "value": "ion costs."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10390:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10390:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10390:37:6"
                }
              ]
            },
            "name": "store_literal_in_memory_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10303:6:6",
                "type": ""
              }
            ],
            "src": "10205:229:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10546:65:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10568:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10576:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10564:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10564:14:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10580:23:6",
                        "type": "",
                        "value": "Ruling out of bounds!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10557:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10557:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10557:47:6"
                }
              ]
            },
            "name": "store_literal_in_memory_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10538:6:6",
                "type": ""
              }
            ],
            "src": "10440:171:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10677:62:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10711:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "10713:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10713:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10713:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10700:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10707:1:6",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10697:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10697:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10690:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10690:20:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10687:2:6"
                }
              ]
            },
            "name": "validator_assert_t_enum$_DisputeStatus_$738",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10670:5:6",
                "type": ""
              }
            ],
            "src": "10617:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10788:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10845:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10854:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10857:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10847:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10847:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10847:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10811:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10836:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10818:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10818:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10808:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10808:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10801:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10801:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10798:2:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10781:5:6",
                "type": ""
              }
            ],
            "src": "10745:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IArbitrable_$730_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IArbitrable_$730_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_DisputeStatus_$738_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_DisputeStatus_$738_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IArbitrable_$730_t_uint256_t_uint256_t_enum$_DisputeStatus_$738__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IArbitrable_$730_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_DisputeStatus_$738_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_enum$_DisputeStatus_$738__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_DisputeStatus_$738_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_DisputeStatus_$738(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_DisputeStatus_$738(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IArbitrable_$730_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IArbitrable_$730_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IArbitrable_$730_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_DisputeStatus_$738_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_DisputeStatus_$738(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dispute is not awaiting arbitrat\")\n\n        mstore(add(memPtr, 32), \"ion.\")\n\n    }\n\n    function store_literal_in_memory_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ETH to cover arbitrat\")\n\n        mstore(add(memPtr, 32), \"ion costs.\")\n\n    }\n\n    function store_literal_in_memory_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ruling out of bounds!\")\n\n    }\n\n    function validator_assert_t_enum$_DisputeStatus_$738(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:2703:0:-:0;;;157:10;134:33;;;;;;;;;;;;;;;;;;;;93:2703;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:2703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:184;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1595:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:571;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2356:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;313:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;134:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2628:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;747:652;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:230;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;345:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1405:184;1510:20;1555:8;1564:10;1555:20;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1546:36;;1405:184;;;:::o;1595:178::-;1700:14;1739:8;1748:10;1739:20;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1730:36;;1595:178;;;:::o;1779:571::-;1898:23;1924:8;1933:10;1924:20;;;;;;;;;;;;;;;;;;;;;;;;;;1898:46;;1974:7;:15;;;1963:7;:26;;1955:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2064:21;2046:39;;;;;;;;;;;;;;;;:7;:14;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;2025:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;2175:7;2158;:14;;:24;;;;2209:20;2192:7;:14;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2248:10;2240:28;;:49;2269:19;;;;;;;;;;;;;:15;:19::i;:::-;2240:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2299:7;:18;;;;;;;;;;;;:23;;;2323:10;2335:7;2299:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:571;;;:::o;2356:266::-;2513:34;2524:10;2536;2513;:34::i;:::-;2500:9;:47;;2479:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;2356:266;;:::o;313:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;134:33::-;;;;;;;;;;;;:::o;2628:166::-;2732:13;2747:11;2782:1;2785;2774:13;;;;2628:166;;;:::o;747:652::-;878:17;945:27;961:10;945:15;:27::i;:::-;932:9;:40;;911:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;1051:8;1078:196;;;;;;;;1128:10;1078:196;;;;;;1166:8;1078:196;;;;1208:3;1078:196;;;;1238:21;1078:196;;;;;;;;;;;;;;;;;;;1051:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:1;1307:8;:15;;;;:19;;;;:::i;:::-;1295:31;;1380:10;1341:51;;1357:9;1341:51;;;;;;;;;;747:652;;;;:::o;511:230::-;638:7;668:6;661:13;;511:230;;;;:::o;345:160::-;457:7;487:11;480:18;;345:160;;;:::o;7:343:6:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;369:271::-;424:5;473:3;466:4;458:6;454:17;450:27;440:2;;491:1;488;481:12;440:2;531:6;518:20;556:78;630:3;622:6;615:4;607:6;603:17;556:78;:::i;:::-;547:87;;430:210;;;;;:::o;646:139::-;692:5;730:6;717:20;708:29;;746:33;773:5;746:33;:::i;:::-;698:87;;;;:::o;791:373::-;859:6;908:2;896:9;887:7;883:23;879:32;876:2;;;924:1;921;914:12;876:2;995:1;984:9;980:17;967:31;1025:18;1017:6;1014:30;1011:2;;;1057:1;1054;1047:12;1011:2;1085:62;1139:7;1130:6;1119:9;1115:22;1085:62;:::i;:::-;1075:72;;938:219;866:298;;;;:::o;1170:262::-;1229:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:2;;;1294:1;1291;1284:12;1246:2;1337:1;1362:53;1407:7;1398:6;1387:9;1383:22;1362:53;:::i;:::-;1352:63;;1308:117;1236:196;;;;:::o;1438:518::-;1515:6;1523;1572:2;1560:9;1551:7;1547:23;1543:32;1540:2;;;1588:1;1585;1578:12;1540:2;1631:1;1656:53;1701:7;1692:6;1681:9;1677:22;1656:53;:::i;:::-;1646:63;;1602:117;1786:2;1775:9;1771:18;1758:32;1817:18;1809:6;1806:30;1803:2;;;1849:1;1846;1839:12;1803:2;1877:62;1931:7;1922:6;1911:9;1907:22;1877:62;:::i;:::-;1867:72;;1729:220;1530:426;;;;;:::o;1962:407::-;2030:6;2038;2087:2;2075:9;2066:7;2062:23;2058:32;2055:2;;;2103:1;2100;2093:12;2055:2;2146:1;2171:53;2216:7;2207:6;2196:9;2192:22;2171:53;:::i;:::-;2161:63;;2117:117;2273:2;2299:53;2344:7;2335:6;2324:9;2320:22;2299:53;:::i;:::-;2289:63;;2244:118;2045:324;;;;;:::o;2375:118::-;2462:24;2480:5;2462:24;:::i;:::-;2457:3;2450:37;2440:53;;:::o;2499:169::-;2605:56;2655:5;2605:56;:::i;:::-;2600:3;2593:69;2583:85;;:::o;2674:161::-;2776:52;2822:5;2776:52;:::i;:::-;2771:3;2764:65;2754:81;;:::o;2841:366::-;2983:3;3004:67;3068:2;3063:3;3004:67;:::i;:::-;2997:74;;3080:93;3169:3;3080:93;:::i;:::-;3198:2;3193:3;3189:12;3182:19;;2987:220;;;:::o;3213:366::-;3355:3;3376:67;3440:2;3435:3;3376:67;:::i;:::-;3369:74;;3452:93;3541:3;3452:93;:::i;:::-;3570:2;3565:3;3561:12;3554:19;;3359:220;;;:::o;3585:366::-;3727:3;3748:67;3812:2;3807:3;3748:67;:::i;:::-;3741:74;;3824:93;3913:3;3824:93;:::i;:::-;3942:2;3937:3;3933:12;3926:19;;3731:220;;;:::o;3957:118::-;4044:24;4062:5;4044:24;:::i;:::-;4039:3;4032:37;4022:53;;:::o;4081:222::-;4174:4;4212:2;4201:9;4197:18;4189:26;;4225:71;4293:1;4282:9;4278:17;4269:6;4225:71;:::i;:::-;4179:124;;;;:::o;4309:621::-;4520:4;4558:3;4547:9;4543:19;4535:27;;4572:90;4659:1;4648:9;4644:17;4635:6;4572:90;:::i;:::-;4672:72;4740:2;4729:9;4725:18;4716:6;4672:72;:::i;:::-;4754;4822:2;4811:9;4807:18;4798:6;4754:72;:::i;:::-;4836:87;4919:2;4908:9;4904:18;4895:6;4836:87;:::i;:::-;4525:405;;;;;;;:::o;4936:252::-;5044:4;5082:2;5071:9;5067:18;5059:26;;5095:86;5178:1;5167:9;5163:17;5154:6;5095:86;:::i;:::-;5049:139;;;;:::o;5194:419::-;5360:4;5398:2;5387:9;5383:18;5375:26;;5447:9;5441:4;5437:20;5433:1;5422:9;5418:17;5411:47;5475:131;5601:4;5475:131;:::i;:::-;5467:139;;5365:248;;;:::o;5619:419::-;5785:4;5823:2;5812:9;5808:18;5800:26;;5872:9;5866:4;5862:20;5858:1;5847:9;5843:17;5836:47;5900:131;6026:4;5900:131;:::i;:::-;5892:139;;5790:248;;;:::o;6044:419::-;6210:4;6248:2;6237:9;6233:18;6225:26;;6297:9;6291:4;6287:20;6283:1;6272:9;6268:17;6261:47;6325:131;6451:4;6325:131;:::i;:::-;6317:139;;6215:248;;;:::o;6469:222::-;6562:4;6600:2;6589:9;6585:18;6577:26;;6613:71;6681:1;6670:9;6666:17;6657:6;6613:71;:::i;:::-;6567:124;;;;:::o;6697:332::-;6818:4;6856:2;6845:9;6841:18;6833:26;;6869:71;6937:1;6926:9;6922:17;6913:6;6869:71;:::i;:::-;6950:72;7018:2;7007:9;7003:18;6994:6;6950:72;:::i;:::-;6823:206;;;;;:::o;7035:129::-;7069:6;7096:20;;:::i;:::-;7086:30;;7125:33;7153:4;7145:6;7125:33;:::i;:::-;7076:88;;;:::o;7170:75::-;7203:6;7236:2;7230:9;7220:19;;7210:35;:::o;7251:307::-;7312:4;7402:18;7394:6;7391:30;7388:2;;;7424:18;;:::i;:::-;7388:2;7462:29;7484:6;7462:29;:::i;:::-;7454:37;;7546:4;7540;7536:15;7528:23;;7317:241;;;:::o;7564:169::-;7648:11;7682:6;7677:3;7670:19;7722:4;7717:3;7713:14;7698:29;;7660:73;;;;:::o;7739:191::-;7779:4;7799:20;7817:1;7799:20;:::i;:::-;7794:25;;7833:20;7851:1;7833:20;:::i;:::-;7828:25;;7872:1;7869;7866:8;7863:2;;;7877:18;;:::i;:::-;7863:2;7922:1;7919;7915:9;7907:17;;7784:146;;;;:::o;7936:96::-;7973:7;8002:24;8020:5;8002:24;:::i;:::-;7991:35;;7981:51;;;:::o;8038:145::-;8092:7;8121:5;8110:16;;8127:50;8171:5;8127:50;:::i;:::-;8100:83;;;:::o;8189:126::-;8226:7;8266:42;8259:5;8255:54;8244:65;;8234:81;;;:::o;8321:77::-;8358:7;8387:5;8376:16;;8366:32;;;:::o;8404:164::-;8473:9;8506:56;8556:5;8506:56;:::i;:::-;8493:69;;8483:85;;;:::o;8574:132::-;8643:9;8676:24;8694:5;8676:24;:::i;:::-;8663:37;;8653:53;;;:::o;8712:145::-;8777:9;8810:41;8845:5;8810:41;:::i;:::-;8797:54;;8787:70;;;:::o;8863:154::-;8947:6;8942:3;8937;8924:30;9009:1;9000:6;8995:3;8991:16;8984:27;8914:103;;;:::o;9023:281::-;9106:27;9128:4;9106:27;:::i;:::-;9098:6;9094:40;9236:6;9224:10;9221:22;9200:18;9188:10;9185:34;9182:62;9179:2;;;9247:18;;:::i;:::-;9179:2;9287:10;9283:2;9276:22;9066:238;;;:::o;9310:180::-;9358:77;9355:1;9348:88;9455:4;9452:1;9445:15;9479:4;9476:1;9469:15;9496:180;9544:77;9541:1;9534:88;9641:4;9638:1;9631:15;9665:4;9662:1;9655:15;9682:180;9730:77;9727:1;9720:88;9827:4;9824:1;9817:15;9851:4;9848:1;9841:15;9868:102;9909:6;9960:2;9956:7;9951:2;9944:5;9940:14;9936:28;9926:38;;9916:54;;;:::o;9976:223::-;10116:34;10112:1;10104:6;10100:14;10093:58;10185:6;10180:2;10172:6;10168:15;10161:31;10082:117;:::o;10205:229::-;10345:34;10341:1;10333:6;10329:14;10322:58;10414:12;10409:2;10401:6;10397:15;10390:37;10311:123;:::o;10440:171::-;10580:23;10576:1;10568:6;10564:14;10557:47;10546:65;:::o;10617:122::-;10707:1;10700:5;10697:12;10687:2;;10713:18;;:::i;:::-;10687:2;10677:62;:::o;10745:122::-;10818:24;10836:5;10818:24;:::i;:::-;10811:5;10808:35;10798:2;;10857:1;10854;10847:12;10798:2;10788:79;:::o",
  "source": "/**\n * SPDX-License-Identifier: MIT\n */\npragma solidity >=0.7;\n\nimport \"./IArbitrator.sol\";\n\ncontract Arbitrator is IArbitrator {\n    address public owner = msg.sender;\n\n    struct Dispute {\n        IArbitrable arbitrated;\n        uint256 choices;\n        uint256 ruling;\n        DisputeStatus status;\n    }\n\n    Dispute[] public disputes;\n\n    function arbitrationCost(bytes memory _extraData)\n        public\n        pure\n        override\n        returns (uint256)\n    {\n        return 0.001 ether;\n    }\n\n    function appealCost(uint256 _disputeID, bytes memory _extraData)\n        public\n        pure\n        override\n        returns (uint256)\n    {\n        return 2**250; // An unaffordable amount which practically avoids appeals.\n    }\n\n    function createDispute(uint256 _choices, bytes memory _extraData)\n        public\n        payable\n        override\n        returns (uint256 disputeID)\n    {\n        require(\n            msg.value >= arbitrationCost(_extraData),\n            \"Not enough ETH to cover arbitration costs.\"\n        );\n\n        disputes.push(\n            Dispute({\n                arbitrated: IArbitrable(msg.sender),\n                choices: _choices,\n                ruling: uint256(420),\n                status: DisputeStatus.Waiting\n            })\n        );\n\n        disputeID = disputes.length - 1;\n        emit DisputeCreation(disputeID, IArbitrable(msg.sender));\n    }\n\n    function disputeStatus(uint256 _disputeID)\n        public\n        view\n        override\n        returns (DisputeStatus status)\n    {\n        status = disputes[_disputeID].status;\n    }\n\n    function currentRuling(uint256 _disputeID)\n        public\n        view\n        override\n        returns (uint256 ruling)\n    {\n        ruling = disputes[_disputeID].ruling;\n    }\n\n    function rule(uint256 _disputeID, uint256 _ruling) public {\n        // For test reason everyone can arbitrate\n\n        Dispute storage dispute = disputes[_disputeID];\n\n        require(_ruling <= dispute.choices, \"Ruling out of bounds!\");\n        require(\n            dispute.status == DisputeStatus.Waiting,\n            \"Dispute is not awaiting arbitration.\"\n        );\n\n        dispute.ruling = _ruling;\n        dispute.status = DisputeStatus.Solved;\n\n        payable(msg.sender).transfer(arbitrationCost(\"\"));\n        dispute.arbitrated.rule(_disputeID, _ruling);\n    }\n\n    function appeal(uint256 _disputeID, bytes memory _extraData)\n        public\n        payable\n        override\n    {\n        require(\n            msg.value >= appealCost(_disputeID, _extraData),\n            \"Not enough ETH to cover arbitration costs.\"\n        );\n    }\n\n    function appealPeriod(uint256 _disputeID)\n        public\n        pure\n        override\n        returns (uint256 start, uint256 end)\n    {\n        return (0, 0);\n    }\n}\n",
  "sourcePath": "/home/ajand/Desktop/projects/web3/kleros/contracts/Arbitrator.sol",
  "ast": {
    "absolutePath": "project:/contracts/Arbitrator.sol",
    "exportedSymbols": {
      "Arbitrator": [
        237
      ],
      "IArbitrable": [
        730
      ],
      "IArbitrator": [
        826
      ]
    },
    "id": 238,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:22:0"
      },
      {
        "absolutePath": "project:/contracts/IArbitrator.sol",
        "file": "./IArbitrator.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 238,
        "sourceUnit": 827,
        "src": "64:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IArbitrator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 826,
              "src": "116:11:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "116:11:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 237,
        "linearizedBaseContracts": [
          237,
          826
        ],
        "name": "Arbitrator",
        "nameLocation": "102:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "149:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "134:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "134:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 6,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "157:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "157:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Arbitrator.Dispute",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "arbitrated",
                "nameLocation": "211:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "199:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IArbitrable_$730",
                  "typeString": "contract IArbitrable"
                },
                "typeName": {
                  "id": 10,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9,
                    "name": "IArbitrable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 730,
                    "src": "199:11:0"
                  },
                  "referencedDeclaration": 730,
                  "src": "199:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$730",
                    "typeString": "contract IArbitrable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "choices",
                "nameLocation": "239:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "231:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "231:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "ruling",
                "nameLocation": "264:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "256:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "256:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "294:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "280:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$738",
                  "typeString": "enum IArbitrator.DisputeStatus"
                },
                "typeName": {
                  "id": 17,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 16,
                    "name": "DisputeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 738,
                    "src": "280:13:0"
                  },
                  "referencedDeclaration": 738,
                  "src": "280:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$738",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nameLocation": "181:7:0",
            "nodeType": "StructDefinition",
            "scope": 237,
            "src": "174:133:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "564a565d",
            "id": 23,
            "mutability": "mutable",
            "name": "disputes",
            "nameLocation": "330:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "313:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
              "typeString": "struct Arbitrator.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 20,
                  "name": "Dispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "313:7:0"
                },
                "referencedDeclaration": 19,
                "src": "313:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                  "typeString": "struct Arbitrator.Dispute"
                }
              },
              "id": 22,
              "nodeType": "ArrayTypeName",
              "src": "313:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage_ptr",
                "typeString": "struct Arbitrator.Dispute[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              780
            ],
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "470:35:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "302e303031",
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "487:11:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "value": "0.001"
                  },
                  "functionReturnParameters": 30,
                  "id": 32,
                  "nodeType": "Return",
                  "src": "480:18:0"
                }
              ]
            },
            "functionSelector": "f7434ea9",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nameLocation": "354:15:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "431:8:0"
            },
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "383:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "370:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:25:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "457:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:9:0"
            },
            "scope": 237,
            "src": "345:160:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              798
            ],
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "651:90:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "668:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "323530",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250_by_1",
                        "typeString": "int_const 250"
                      },
                      "value": "250"
                    },
                    "src": "668:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 47,
                  "nodeType": "Return",
                  "src": "661:13:0"
                }
              ]
            },
            "functionSelector": "f23f16e6",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nameLocation": "520:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 40,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "612:8:0"
            },
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "539:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "531:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "564:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "551:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "530:45:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "638:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:9:0"
            },
            "scope": 237,
            "src": "511:230:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              772
            ],
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "901:498:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "932:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "932:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 63,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "961:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 62,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "945:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "945:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "932:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "986:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "911:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "911:129:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 74,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1128:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1128:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 73,
                              "name": "IArbitrable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "1116:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IArbitrable_$730_$",
                                "typeString": "type(contract IArbitrable)"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1116:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrable_$730",
                              "typeString": "contract IArbitrable"
                            }
                          },
                          {
                            "id": 77,
                            "name": "_choices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1166:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "343230",
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1208:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_420_by_1",
                                  "typeString": "int_const 420"
                                },
                                "value": "420"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_420_by_1",
                                  "typeString": "int_const 420"
                                }
                              ],
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1200:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 78,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1200:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1200:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 82,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "1238:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$738_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Waiting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 735,
                            "src": "1238:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$738",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrable_$730",
                              "typeString": "contract IArbitrable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_enum$_DisputeStatus_$738",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          ],
                          "id": 72,
                          "name": "Dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1078:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dispute_$19_storage_ptr_$",
                            "typeString": "type(struct Arbitrator.Dispute storage pointer)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "arbitrated",
                          "choices",
                          "ruling",
                          "status"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1078:196:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_memory_ptr",
                          "typeString": "struct Arbitrator.Dispute memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dispute_$19_memory_ptr",
                          "typeString": "struct Arbitrator.Dispute memory"
                        }
                      ],
                      "expression": {
                        "id": 69,
                        "name": "disputes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1051:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                          "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1051:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Dispute_$19_storage_$dyn_storage_ptr_$_t_struct$_Dispute_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Dispute_$19_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Arbitrator.Dispute storage ref[] storage pointer,struct Arbitrator.Dispute storage ref)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:233:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:233:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1295:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 88,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1307:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1307:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1307:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1295:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1357:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 97,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1380:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1380:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 96,
                          "name": "IArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "1368:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrable_$730_$",
                            "typeString": "type(contract IArbitrable)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$730",
                          "typeString": "contract IArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$730",
                          "typeString": "contract IArbitrable"
                        }
                      ],
                      "id": 94,
                      "name": "DisputeCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "1341:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$730_$returns$__$",
                        "typeString": "function (uint256,contract IArbitrable)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "EmitStatement",
                  "src": "1336:56:0"
                }
              ]
            },
            "functionSelector": "c13517e1",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nameLocation": "756:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 55,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "852:8:0"
            },
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nameLocation": "778:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "770:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "801:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "788:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:43:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nameLocation": "886:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "878:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:19:0"
            },
            "scope": 237,
            "src": "747:652:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              817
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1536:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1546:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 113,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1555:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "id": 114,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1564:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1555:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage",
                          "typeString": "struct Arbitrator.Dispute storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "1555:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "1546:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$738",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:36:0"
                }
              ]
            },
            "functionSelector": "10f169e8",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nameLocation": "1414:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1484:8:0"
            },
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1436:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1428:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1427:20:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1524:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1510:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$738",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "id": 109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 108,
                      "name": "DisputeStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 738,
                      "src": "1510:13:0"
                    },
                    "referencedDeclaration": 738,
                    "src": "1510:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$738",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:22:0"
            },
            "scope": 237,
            "src": "1405:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              825
            ],
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1720:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "1730:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 129,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1739:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 131,
                        "indexExpression": {
                          "id": 130,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1748:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1739:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage",
                          "typeString": "struct Arbitrator.Dispute storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1739:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1730:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:36:0"
                }
              ]
            },
            "functionSelector": "1c3db16d",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nameLocation": "1604:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 124,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1674:8:0"
            },
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1626:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1618:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:20:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nameLocation": "1708:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1700:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1699:16:0"
            },
            "scope": 237,
            "src": "1595:178:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1837:513:0",
              "statements": [
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nameLocation": "1914:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1898:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                        "typeString": "struct Arbitrator.Dispute"
                      },
                      "typeName": {
                        "id": 144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 143,
                          "name": "Dispute",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "1898:7:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "1898:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                          "typeString": "struct Arbitrator.Dispute"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 149,
                  "initialValue": {
                    "baseExpression": {
                      "id": 146,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1924:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                        "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 148,
                    "indexExpression": {
                      "id": 147,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1933:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1924:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$19_storage",
                      "typeString": "struct Arbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1898:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1963:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 152,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "1974:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1974:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1963:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52756c696e67206f7574206f6620626f756e647321",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1991:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76",
                          "typeString": "literal_string \"Ruling out of bounds!\""
                        },
                        "value": "Ruling out of bounds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76",
                          "typeString": "literal_string \"Ruling out of bounds!\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1955:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$738",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 159,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2046:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "2046:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$738",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 161,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "2064:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$738_$",
                              "typeString": "type(enum IArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 735,
                          "src": "2064:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$738",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "src": "2046:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465206973206e6f74206177616974696e67206172626974726174696f6e2e",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82",
                          "typeString": "literal_string \"Dispute is not awaiting arbitration.\""
                        },
                        "value": "Dispute is not awaiting arbitration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82",
                          "typeString": "literal_string \"Dispute is not awaiting arbitration.\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:122:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:122:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 167,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2158:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                          "typeString": "struct Arbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2158:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 170,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2158:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:24:0"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 173,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2192:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                          "typeString": "struct Arbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "2192:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 176,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "2209:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$738_$",
                          "typeString": "type(enum IArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 737,
                      "src": "2209:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "2192:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$738",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2285:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 186,
                          "name": "arbitrationCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2269:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2269:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 182,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2248:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2248:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2240:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2240:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2240:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2240:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2323:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 197,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2335:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 191,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2299:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                            "typeString": "struct Arbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "2299:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$730",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 729,
                      "src": "2299:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:44:0"
                }
              ]
            },
            "functionSelector": "311a6c56",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nameLocation": "1788:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1801:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1793:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "1821:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1813:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:37:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:0"
            },
            "scope": 237,
            "src": "1779:571:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              788
            ],
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2469:153:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2500:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2500:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 213,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2524:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 214,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "2536:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 212,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "2513:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2513:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2500:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2561:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2479:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:136:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:136:0"
                }
              ]
            },
            "functionSelector": "49912f88",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appeal",
            "nameLocation": "2365:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 207,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2456:8:0"
            },
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "2380:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2372:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2372:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "2405:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2392:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2371:45:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2469:0:0"
            },
            "scope": 237,
            "src": "2356:266:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              808
            ],
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "2764:30:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2785:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 233,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2781:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "2774:13:0"
                }
              ]
            },
            "functionSelector": "afe15cfb",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nameLocation": "2637:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 225,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2706:8:0"
            },
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "2658:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2650:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2649:20:0"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "2740:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2732:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "end",
                  "nameLocation": "2755:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2747:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2731:28:0"
            },
            "scope": 237,
            "src": "2628:166:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 238,
        "src": "93:2703:0",
        "usedErrors": []
      }
    ],
    "src": "40:2757:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Arbitrator.sol",
    "exportedSymbols": {
      "Arbitrator": [
        237
      ],
      "IArbitrable": [
        730
      ],
      "IArbitrator": [
        826
      ]
    },
    "id": 238,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:22:0"
      },
      {
        "absolutePath": "project:/contracts/IArbitrator.sol",
        "file": "./IArbitrator.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 238,
        "sourceUnit": 827,
        "src": "64:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IArbitrator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 826,
              "src": "116:11:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "116:11:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 237,
        "linearizedBaseContracts": [
          237,
          826
        ],
        "name": "Arbitrator",
        "nameLocation": "102:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "149:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "134:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "134:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 6,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "157:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "157:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Arbitrator.Dispute",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "arbitrated",
                "nameLocation": "211:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "199:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IArbitrable_$730",
                  "typeString": "contract IArbitrable"
                },
                "typeName": {
                  "id": 10,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9,
                    "name": "IArbitrable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 730,
                    "src": "199:11:0"
                  },
                  "referencedDeclaration": 730,
                  "src": "199:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$730",
                    "typeString": "contract IArbitrable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "choices",
                "nameLocation": "239:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "231:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "231:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "ruling",
                "nameLocation": "264:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "256:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "256:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "294:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "280:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$738",
                  "typeString": "enum IArbitrator.DisputeStatus"
                },
                "typeName": {
                  "id": 17,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 16,
                    "name": "DisputeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 738,
                    "src": "280:13:0"
                  },
                  "referencedDeclaration": 738,
                  "src": "280:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$738",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nameLocation": "181:7:0",
            "nodeType": "StructDefinition",
            "scope": 237,
            "src": "174:133:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "564a565d",
            "id": 23,
            "mutability": "mutable",
            "name": "disputes",
            "nameLocation": "330:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "313:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
              "typeString": "struct Arbitrator.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 20,
                  "name": "Dispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "313:7:0"
                },
                "referencedDeclaration": 19,
                "src": "313:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                  "typeString": "struct Arbitrator.Dispute"
                }
              },
              "id": 22,
              "nodeType": "ArrayTypeName",
              "src": "313:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage_ptr",
                "typeString": "struct Arbitrator.Dispute[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              780
            ],
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "470:35:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "302e303031",
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "487:11:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "value": "0.001"
                  },
                  "functionReturnParameters": 30,
                  "id": 32,
                  "nodeType": "Return",
                  "src": "480:18:0"
                }
              ]
            },
            "functionSelector": "f7434ea9",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nameLocation": "354:15:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "431:8:0"
            },
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "383:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "370:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:25:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "457:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:9:0"
            },
            "scope": 237,
            "src": "345:160:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              798
            ],
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "651:90:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "668:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "323530",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250_by_1",
                        "typeString": "int_const 250"
                      },
                      "value": "250"
                    },
                    "src": "668:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 47,
                  "nodeType": "Return",
                  "src": "661:13:0"
                }
              ]
            },
            "functionSelector": "f23f16e6",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nameLocation": "520:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 40,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "612:8:0"
            },
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "539:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "531:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "564:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "551:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "530:45:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "638:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:9:0"
            },
            "scope": 237,
            "src": "511:230:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              772
            ],
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "901:498:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "932:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "932:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 63,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "961:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 62,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "945:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "945:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "932:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "986:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "911:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "911:129:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 74,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1128:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1128:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 73,
                              "name": "IArbitrable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "1116:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IArbitrable_$730_$",
                                "typeString": "type(contract IArbitrable)"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1116:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrable_$730",
                              "typeString": "contract IArbitrable"
                            }
                          },
                          {
                            "id": 77,
                            "name": "_choices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1166:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "343230",
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1208:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_420_by_1",
                                  "typeString": "int_const 420"
                                },
                                "value": "420"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_420_by_1",
                                  "typeString": "int_const 420"
                                }
                              ],
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1200:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 78,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1200:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1200:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 82,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "1238:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$738_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Waiting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 735,
                            "src": "1238:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$738",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrable_$730",
                              "typeString": "contract IArbitrable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_enum$_DisputeStatus_$738",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          ],
                          "id": 72,
                          "name": "Dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1078:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dispute_$19_storage_ptr_$",
                            "typeString": "type(struct Arbitrator.Dispute storage pointer)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "arbitrated",
                          "choices",
                          "ruling",
                          "status"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1078:196:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_memory_ptr",
                          "typeString": "struct Arbitrator.Dispute memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dispute_$19_memory_ptr",
                          "typeString": "struct Arbitrator.Dispute memory"
                        }
                      ],
                      "expression": {
                        "id": 69,
                        "name": "disputes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1051:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                          "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1051:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Dispute_$19_storage_$dyn_storage_ptr_$_t_struct$_Dispute_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Dispute_$19_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Arbitrator.Dispute storage ref[] storage pointer,struct Arbitrator.Dispute storage ref)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:233:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:233:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1295:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 88,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1307:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1307:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1307:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1295:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1357:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 97,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1380:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1380:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 96,
                          "name": "IArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "1368:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrable_$730_$",
                            "typeString": "type(contract IArbitrable)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$730",
                          "typeString": "contract IArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$730",
                          "typeString": "contract IArbitrable"
                        }
                      ],
                      "id": 94,
                      "name": "DisputeCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "1341:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$730_$returns$__$",
                        "typeString": "function (uint256,contract IArbitrable)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "EmitStatement",
                  "src": "1336:56:0"
                }
              ]
            },
            "functionSelector": "c13517e1",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nameLocation": "756:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 55,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "852:8:0"
            },
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nameLocation": "778:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "770:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "801:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "788:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:43:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nameLocation": "886:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "878:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:19:0"
            },
            "scope": 237,
            "src": "747:652:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              817
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1536:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1546:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 113,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1555:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "id": 114,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1564:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1555:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage",
                          "typeString": "struct Arbitrator.Dispute storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "1555:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "1546:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$738",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:36:0"
                }
              ]
            },
            "functionSelector": "10f169e8",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nameLocation": "1414:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1484:8:0"
            },
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1436:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1428:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1427:20:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1524:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1510:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$738",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "id": 109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 108,
                      "name": "DisputeStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 738,
                      "src": "1510:13:0"
                    },
                    "referencedDeclaration": 738,
                    "src": "1510:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$738",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:22:0"
            },
            "scope": 237,
            "src": "1405:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              825
            ],
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1720:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "1730:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 129,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1739:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                            "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 131,
                        "indexExpression": {
                          "id": 130,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1748:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1739:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage",
                          "typeString": "struct Arbitrator.Dispute storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1739:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1730:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:36:0"
                }
              ]
            },
            "functionSelector": "1c3db16d",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nameLocation": "1604:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 124,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1674:8:0"
            },
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1626:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1618:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:20:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nameLocation": "1708:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1700:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1699:16:0"
            },
            "scope": 237,
            "src": "1595:178:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1837:513:0",
              "statements": [
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nameLocation": "1914:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1898:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                        "typeString": "struct Arbitrator.Dispute"
                      },
                      "typeName": {
                        "id": 144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 143,
                          "name": "Dispute",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "1898:7:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "1898:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                          "typeString": "struct Arbitrator.Dispute"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 149,
                  "initialValue": {
                    "baseExpression": {
                      "id": 146,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1924:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$19_storage_$dyn_storage",
                        "typeString": "struct Arbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 148,
                    "indexExpression": {
                      "id": 147,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1933:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1924:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$19_storage",
                      "typeString": "struct Arbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1898:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1963:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 152,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "1974:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1974:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1963:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52756c696e67206f7574206f6620626f756e647321",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1991:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76",
                          "typeString": "literal_string \"Ruling out of bounds!\""
                        },
                        "value": "Ruling out of bounds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a55f842e2fbeefee2c48a8053d458c0a9e35fa60711df8dc64c70e2fd6b07e76",
                          "typeString": "literal_string \"Ruling out of bounds!\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1955:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$738",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 159,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2046:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                              "typeString": "struct Arbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "2046:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$738",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 161,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "2064:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$738_$",
                              "typeString": "type(enum IArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 735,
                          "src": "2064:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$738",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "src": "2046:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465206973206e6f74206177616974696e67206172626974726174696f6e2e",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82",
                          "typeString": "literal_string \"Dispute is not awaiting arbitration.\""
                        },
                        "value": "Dispute is not awaiting arbitration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_774b1275d5add9a12e6a134af7e1b5b601bd527507b1adb4f4e1bcc841678f82",
                          "typeString": "literal_string \"Dispute is not awaiting arbitration.\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:122:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:122:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 167,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2158:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                          "typeString": "struct Arbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2158:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 170,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2158:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:24:0"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 173,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2192:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                          "typeString": "struct Arbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "2192:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 176,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "2209:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$738_$",
                          "typeString": "type(enum IArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 737,
                      "src": "2209:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$738",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "2192:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$738",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2285:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 186,
                          "name": "arbitrationCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2269:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2269:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 182,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2248:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2248:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2240:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2240:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2240:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2240:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2323:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 197,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2335:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 191,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2299:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$19_storage_ptr",
                            "typeString": "struct Arbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "2299:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$730",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 729,
                      "src": "2299:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:44:0"
                }
              ]
            },
            "functionSelector": "311a6c56",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nameLocation": "1788:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1801:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1793:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "1821:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1813:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:37:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:0"
            },
            "scope": 237,
            "src": "1779:571:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              788
            ],
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2469:153:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2500:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2500:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 213,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2524:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 214,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "2536:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 212,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "2513:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2513:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2500:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2561:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2479:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:136:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:136:0"
                }
              ]
            },
            "functionSelector": "49912f88",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appeal",
            "nameLocation": "2365:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 207,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2456:8:0"
            },
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "2380:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2372:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2372:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "2405:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2392:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2371:45:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2469:0:0"
            },
            "scope": 237,
            "src": "2356:266:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              808
            ],
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "2764:30:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2785:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 233,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2781:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "2774:13:0"
                }
              ]
            },
            "functionSelector": "afe15cfb",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nameLocation": "2637:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 225,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2706:8:0"
            },
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "2658:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2650:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2649:20:0"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "2740:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2732:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "end",
                  "nameLocation": "2755:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2747:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2731:28:0"
            },
            "scope": 237,
            "src": "2628:166:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 238,
        "src": "93:2703:0",
        "usedErrors": []
      }
    ],
    "src": "40:2757:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x68443a8533955878FE11EE620899EBcf6579623B",
      "transactionHash": "0x35ba73eb3ebd466c415ae2d161ce8746eb7a4d6ce80946ea39ed48d5d569fab5"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x82ae169B7748bD1e36e551BB871449FE41bB3Aff",
      "transactionHash": "0xcb7d0fdbe69a08fdfeffb56466ab786b002f80a87b670401b7d6bafcc7086c52"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-25T10:57:49.573Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "appeal(uint256,bytes)": {
        "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.",
          "_extraData": "Can be used to give extra info on the appeal."
        }
      },
      "appealCost(uint256,bytes)": {
        "details": "Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.",
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "_0": "Amount to be paid."
        }
      },
      "appealPeriod(uint256)": {
        "details": "Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).",
        "params": {
          "_disputeID": "ID of the dispute."
        },
        "returns": {
          "end": "The end of the period.",
          "start": "The start of the period."
        }
      },
      "arbitrationCost(bytes)": {
        "details": "Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
        "params": {
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "_0": "Amount to be paid."
        }
      },
      "createDispute(uint256,bytes)": {
        "details": "Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).",
        "params": {
          "_choices": "Amount of choices the arbitrator can make in this dispute.",
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "disputeID": "ID of the dispute created."
        }
      },
      "currentRuling(uint256)": {
        "details": "Return the current ruling of a dispute. This is useful for parties to know if they should appeal.",
        "params": {
          "_disputeID": "ID of the dispute."
        },
        "returns": {
          "ruling": "The ruling which has been given or the one which will be given if there is no appeal."
        }
      },
      "disputeStatus(uint256)": {
        "details": "Return the status of a dispute.",
        "params": {
          "_disputeID": "ID of the dispute to rule."
        },
        "returns": {
          "status": "The status of the dispute."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}